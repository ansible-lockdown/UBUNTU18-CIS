---
- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/cramfs.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: install cramfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs"
        modprobe:
            name: cramfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/freevxfs.conf
            regexp: "^(#)?install freevxfs(\\s|$)"
            line: install freevxfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Disable freevxfs"
        modprobe:
            name: freevxfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/jffs2.conf
            regexp: "^(#)?install jffs2(\\s|$)"
            line: install jffs2 /bin/true
            create: yes

      - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Disable jffs2"
        modprobe:
            name: jffs2
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfs.conf
            regexp: "^(#)?install hfs(\\s|$)"
            line: install hfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Disable hfs"
        modprobe:
            name: hfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfsplus.conf
            regexp: "^(#)?install hfsplus(\\s|$)"
            line: install hfsplus /bin/true
            create: yes

      - name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Disable hfsplus"
        modprobe:
            name: hfsplus
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_5
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/squashfs.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: install squashfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
        modprobe:
            name: squashfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/udf.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: install udf /bin/true
            create: yes

      - name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled | Disable udf"
        modprobe:
            name: udf
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_7
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.7
      - udf

- name: "NOTSCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is limited"
  block:
      - name: "NOTSCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is limited | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/vfat.conf
            regexp: "^(#)?install vfat(\\s|$)"
            line: install vfat /bin/true
            create: yes

      - name: "NOTSCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is limited | Disable FAT"
        modprobe:
            name: vfat
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_8
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_1.1.1.8
      - vfat

- name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured"
  mount:
      path: /tmp
      src: /tmp
      state: mounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_tmp_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.2
      - tmp

- name: |
    "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition"
    "SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition"
    "SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition"
  mount:
      name: /tmp
      src: /tmp
      state: remounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_tmp_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_3 or
        ubtu18cis_rule_1_1_4 or
        ubtu18cis_rule_1_1_5
      - ubtu18cis_vartmp['enabled']
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5
      - tmp

- name: "SCORED | 1.1.6 | AUDIT | Ensure separate partition exists for /var"
  block:
      - name: "SCORED | 1.1.6 | AUDIT | Ensure separate partition exists for /var | Gather /var partition"
        shell: mount | grep "on /var "
        changed_when: false
        failed_when: false
        args:
            warn: false
        register: ubtu18cis_1_1_6_var_mounted

      - name: "SCORED | 1.1.6 | AUDIT | Ensure separate partition exists for /var | Alert if /var partition does not exist"
        debug:
            msg:
                - "ALERT!!!! There is no separate partition for /var"
                - "Please create a separate partition for /var"
        when: ubtu18cis_1_1_6_var_mounted.stdout == ""
  when:
      - ubtu18cis_rule_1_1_6
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - rule_1.1.6
      - var

- name: "SCORED | 1.1.7 | AUDIT | Ensure separate partition exists for /var/tmp"
  block:
      - name: "SCORED | 1.1.7 | AUDIT | Ensure separate partition exists for /var/tmp | Gather /var/tmp partition"
        shell: mount | grep "on /var/tmp "
        changed_when: false
        failed_when: false
        args:
            warn: false
        register: ubtu18cis_1_1_7_var_tmp_mounted

      - name: "SCORED | 1.1.7 | AUDIT | Ensure separate partition exists for /var/tmp | Alert if /var/tmp partition does not exist"
        debug:
            msg:
                - "ALERT!!!! There is no separate partition for /var/tmp"
                - "Please create a separate partition for /var/tmp"
        when: ubtu18cis_1_1_7_var_tmp_mounted.stdout == ""
  when:
      - ubtu18cis_rule_1_1_7
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - rule_1.1.7
      - var/tmp

- name: |
    "SCORED | 1.1.8 | PATCH | Ensure nodev option set on /var/tmp partition"
    "SCORED | 1.1.9 | PATCH | Ensure nosuid option set on /var/tmp partition"
    "SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ ubtu18cis_vartmp['source'] }}"
      state: present
      fstype: "{{ ubtu18cis_vartmp['fstype'] }}"
      opts: "{{ ubtu18cis_vartmp['opts'] }}"

  when:
      - ubtu18cis_rule_1_1_8 or
        ubtu18cis_rule_1_1_9 or
        ubtu18cis_rule_1_1_10
      - ubtu18cis_vartmp['enabled']
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.8
      - rule_1.1.9
      - rule_1.1.10
      - var/tmp

- name: "SCORED | 1.1.11 | AUDIT | Ensure separate partition exists for /var/log"
  block:
      - name: "SCORED | 1.1.11 | AUDIT | Ensure separate partition exists for /var/log | Gather /var/log partition"
        shell: mount | grep "on /var/log "
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_1_11_var_log_mounted
        args:
            warn: false

      - name: "SCORED | 1.1.11 | AUDIT | Ensure separate partition exists for /var/log | Alert if /var/log partition does not exist"
        debug:
            msg:
                - "ALERT!!!! There is no separate partition for /var/log"
                - "Please create a separate partition for /var/log"
        when: ubtu18cis_1_1_11_var_log_mounted.stdout == ""
  when:
      - ubtu18cis_rule_1_1_11
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - rule_1.1.11
      - var/log

- name: "SCORED | 1.1.12 | AUDIT | Ensure separate partition exists for /var/log/audit"
  block:
      - name: "SCORED | 1.1.12 | AUDIT | Ensure separate partition exists for /var/log/audit | Gather /var/log/audit"
        shell: mount | grep "on /var/log/audit "
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_1_12_var_log_audit_mounted
        args:
            warn: false

      - name: "SCORED | 1.1.12 | AUDIT | Ensure separate partition exists for /var/log/audit | Alert if /var/log/audit partition does not exist"
        debug:
            msg:
                - "ALERT!!!! There is no separate partition for /var/log/audit"
                - "Please create a separate partition for /var/log/audit"
        when: ubtu18cis_1_1_12_var_log_audit_mounted.stdout == ""
  when:
      - ubtu18cis_rule_1_1_12
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - var/log/audit

- name: "SCORED | 1.1.13 | AUDIT | Ensure separate partition exists for /home"
  block:
      - name: "SCORED | 1.1.13 | AUDIT | Ensure separate partition exists for /home | Gather /home"
        shell: mount | grep "on /home"
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_1_13_home_mounted
        args:
            warn: false

      - name: "SCORED | 1.1.13 | AUDIT | Ensure separate partition exists for /home | Alert if /home partition does not exist"
        debug:
            msg:
                - "ALERT!!!! There is no separate partition for /home"
                - "Please create a separate partition for /home"
        when: ubtu18cis_1_1_13_home_mounted.stdout == ""
  when:
      - ubtu18cis_rule_1_1_13
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - /home

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
  with_items: "{{ ansible_mounts }}"
  when:
      - ubtu18cis_rule_1_1_14
      - item.mount == "/home"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.14
      - /home

- name: |
    "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition"
    "SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition"
    "SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,nodev,nosuid,noexec"
  when:
      - ubtu18cis_rule_1_1_15 or
        ubtu18cis_rule_1_1_16 or
        ubtu18cis_rule_1_1_17
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17
      - /dev/shm

- name: "NOTSCORED | 1.1.18 | AUDIT | Ensure nodev option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevent control"
  when:
      - ubtu18cis_rule_1_1_18
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.1.18
      - removable_media

- name: "NOTSCORED | 1.1.19 | AUDIT | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevent control"
  when:
      - ubtu18cis_rule_1_1_19
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.1.19
      - removable_media

- name: "NOTSCORED | 1.1.20 | AUDIT | Ensure noexec option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevent control"
  when:
      - ubtu18cis_rule_1_1_20
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.1.20
      - removable_media

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod a+t '{}'
  failed_when: ubtu18cis_1_1_21_status.rc>0
  register: ubtu18cis_1_1_21_status
  when:
      - ubtu18cis_rule_1_1_21
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.21
      - sticky_bit

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  service:
      name: autofs
      state: stopped
      enabled: no
  when:
      - ubtu18cis_rule_1_1_22
      - ubtu18cis_autofs_service_status.stdout == "loaded"
      - not ubtu18cis_allow_autofs
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.22
      - automounting

- name: "SCORED | 1.1.23 | PATCH | Disable USB Storage"
  block:
      - name: "SCORED | 1.1.23 | PATCH | Disable USB Storage | Set modprobe config"
        lineinfile:
            path: /etc/modprobe.d/usb_storage.conf
            regexp: '^install usb-storage'
            line: 'install usb-storage /bin/true'
            create: yes

      - name: "SCORED | 1.1.23 | PATCH | Disable USB Storage | Remove usb-storage module"
        modprobe:
            name: usb-storage
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_23
  tags:
      - level1-server
      - level2-workstation
      - scored
      - patch
      - rule_1.1.23
      - usb_storage

- name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured"
  block:
      - name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured | Get repositories"
        command: apt-cache policy
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_2_1_apt_policy

      - name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured | Message out repository configs"
        debug:
            msg:
                - "Alert!!!! Below are the apt package repositories"
                - "Please review to make sure they conform to your sites policies"
                - "{{ ubtu18cis_1_2_1_apt_policy.stdout_lines }}"
  when:
      - ubtu18cis_rule_1_2_1
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.2.1
      - apt

- name: "NOTSCORED | 1.2.2 | AUDIT | Ensure GPG keys are configured"
  block:
      - name: "NOTSCORED | 1.2.2 | AUDIT | Ensure GPG keys are configured | Get apt gpg keys"
        command: apt-key list
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_2_2_apt_gpgkeys

      - name: "NOTSCORED | 1.2.2 | AUDIT | Ensure GPG keys are configured | Message out apt gpg keys"
        debug:
            msg:
                - "Alert!!!! Below are the apt gpg kyes configured"
                - "Please review to make sure they are configured"
                - "in accordance with site policy"
                - "{{ ubtu18cis_1_2_2_apt_gpgkeys.stdout_lines }}"
  when:
      - ubtu18cis_rule_1_2_2
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.2.2
      - gpg
      - keys

- name: "SCORED | 1.3.1 | PATCH | Ensure sudo is installed"
  apt:
      name: "{{ ubtu18cis_sudo_package }}"
      state: present
  when:
      - ubtu18cis_rule_1_3_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.3.1
      - sudo

- name: "SCORED | 1.3.2 | PATCH | Ensure sudo commands use pty"
  lineinfile:
      path: /etc/sudoers
      regexp: '^Defaults        use_'
      line: 'Defaults        use_pty'
      insertafter: '^Defaults'
  when:
      - ubtu18cis_rule_1_3_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.3.2
      - sudo

- name: "SCORED | 1.3.3 | PATCH | Ensure sudo log file exists"
  lineinfile:
      path: /etc/sudoers
      regexp: '^Defaults        logfile'
      line: 'Defaults        logfile="{{ ubtu18cis_sudo_logfile }}"'
      insertafter: '^Defaults'
  when:
      - ubtu18cis_rule_1_3_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.3.3
      - sudo

- name: "SCORED | 1.4.1 | PATCH | Ensure AIDE is installed"
  apt:
      name: ['aide', 'aide-common']
      state: present
  when:
      - ubtu18cis_rule_1_4_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.4.1
      - aide

- name: "SCORED | 1.4.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "{{ ubtu18cis_aide_cron['cron_file'] }}"
      user: "{{ ubtu18cis_aide_cron['cron_user'] }}"
      minute: "{{ ubtu18cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ ubtu18cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ ubtu18cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ ubtu18cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ ubtu18cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ ubtu18cis_aide_cron['aide_job'] }}"
  when:
      - ubtu18cis_rule_1_4_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.4.2
      - cron

- name: "SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured"
  block:
      - name: "SCORED | 1.5.1 | AUDIT | Ensure permissions on bootloader config are configured | Check for Grub file"
        stat:
            path: /boot/grub/grub.cfg
        register: ubtu18cis_1_5_1_grub_cfg_status

      - name: "SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured | Set permissions"
        file:
            path: /boot/grub/grub.cfg
            owner: root
            group: root
            mode: 0400
        when:
            - ubtu18cis_1_5_1_grub_cfg_status.stat.exists
  when:
      - ubtu18cis_rule_1_5_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.5.1
      - grub

# ---------------
# ---------------
# The RHEL7 based control for this does not use a valid module
# I need to research best way to set grub pw for Ubuntu using the
# grub-mkpasswd-pbkdf2 command and passing the data at the same time.
# ---------------
# ---------------
# - name: "SCORED | 1.5.2 | PATCH | Ensure bootloader password is set"
#   block:
#       - name: "SCORED | 1.5.2 | PATCH | Ensure bootloader password is set"
#         grub_crypt:
#             password: "{{ ubtu18cis_bootloader_password }}"
#         register: grub_pass

#       - debug: var=grub_pass

#   when:
#       - ubtu18cis_rule_1_5_2
#   tags:
#       - level1-server
#       - level1-workstation
#       - scored
#       - patch
#       - rule_1.5.2
#       - grub
#       - notimplemented

- name: "SCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode"
  user:
      name: root
      password: "{{ ubtu18cis_root_pw }}"
  when:
      - ubtu18cis_rule_1_5_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.5.3
      - passwd

- name: "NOTSCORED | 1.5.4 | PATCH | Ensure interactive boot is not enabled"
  block:
      - name: "NOTSCORED | 1.5.4 | PATCH | Ensure interactive boot is not enabled | Check for interactive login setting"
        shell: grep "^PROMPT_FOR_CONFIRM=" /etc/sysconfig/boot
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_5_4_interactive_login_status

      - name: "NOTSCORED | 1.5.4 | PATCH | Ensure interactive boot is not enabled | Set interactive login to no"
        lineinfile:
            path: /etc/sysconfig/boot
            regexp: '^PROMPT_FOR_CONFIRM'
            line: 'PROMPT_FOR_CONFIRM="no"'
        when: "'PROMPT_FOR_CONFIRM' in ubtu18cis_1_5_4_interactive_login_status.stdout"
  when:
      - ubtu18cis_rule_1_5_4
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_1.5.4
      - interactive_boot

- name: "SCORED | 1.6.1 | AUDIT | Ensure XD/NX support is enabled"
  block:
      - name: "SCORED | 1.6.1 | AUDIT | Ensure XD/NX support is enabled | Find status of XD/NX"
        shell: "journalctl | grep 'protection: active'"
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_6_1_xdnx_status

      - name: "SCORED | 1.6.1 | AUDIT | Ensure XD/NX support is enabled | Alert if XD/NX is not enabled"
        debug:
            msg:
                - "ALERT!!!!You do not have XD/NX (Execute Disable/No Execute) enabled"
                - "To conform to CIS standards this needs to be enabled"
        when: "'active' not in ubtu18cis_1_6_1_xdnx_status.stdout"
  when:
      - ubtu18cis_rule_1_6_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_1.6.1
      - xd/nx

- name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  block:
      - name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled | Set ASLR settings"
        lineinfile:
            path: /etc/sysctl.conf
            regexp: '^kernel.randomize_va_space'
            line: 'kernel.randomize_va_space = 2'

      - name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled | Set active kernel parameter"
        sysctl:
            name: kernel.randomize_va_space
            value: '2'
  when:
      - ubtu18cis_rule_1_6_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.6.2
      - aslr

- name: "SCORED | 1.6.3 | PATCH | Ensure prelink is disabled"
  block:
      - name: "SCORED | 1.6.3 | PATCH | Ensure prelink is disabled | Restore binaries to normal"
        command: prelink -ua
        changed_when: false
        failed_when: false

      - name: "SCORED | 1.6.3 | PATCH | Ensure prelink is disabled | Remove prelink package"
        apt:
            name: prelink
            state: absent
  when:
      - ubtu18cis_rule_1_6_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.6.3
      - prelink

- name: "SCORED | 1.6.4 | PATCH | Ensure core dumps are restricted"
  sysctl:
      name: fs.suid_dumpable
      value: '0'
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
      - ubtu18cis_rule_1_6_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.6.4
      - coredump

- name: "SCORED | 1.7.1.1 | PATCH | Ensure AppArmor is installed"
  apt:
      name: ['apparmor', 'apparmor-utils']
      state: present
  when:
      - ubtu18cis_rule_1_7_1_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.7.1.1
      - apparmor

- name: "SCORED | 1.7.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
  block:
      - name: "SCORED | 1.7.1.2 | AUDIT | Ensure AppArmor is enabled in the bootloader configuration | Get current settings"
        shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_7_1_2_cmdline_settings

      - name: "SCORED | 1.7.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX'
            line: 'GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor {{ ubtu18cis_1_7_1_2_cmdline_settings.stdout }}"'
            insertafter: '^GRUB_'
        when:
            - "'apparmor' not in ubtu18cis_1_7_1_2_cmdline_settings.stdout"
            - "'security' not in ubtu18cis_1_7_1_2_cmdline_settings.stdout"
        notify: grub update

      - name: "SCORED | 1.7.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist | Replace apparmor settings when exists"
        replace:
            path: /etc/default/grub
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
        with_items:
            - { regexp: 'apparmor=\S+', replace: 'apparmor=1' }
            - { regexp: 'security=\S+', replace: 'security=apparmor' }
        when:
            - "'apparmor' in ubtu18cis_1_7_1_2_cmdline_settings.stdout"
            - "'security' in ubtu18cis_1_7_1_2_cmdline_settings.stdout"
        notify: grub update
  when:
      - ubtu18cis_rule_1_7_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.7.1.2
      - apparmor

- name: "SCORED | 1.7.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode"
  command: aa-enforce /etc/apparmor.d/*
  failed_when: false
  when:
      - ubtu18cis_rule_1_7_1_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.7.1.3
      - apparmor

- name: "SCORED | 1.7.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing"
  command: aa-enforce /etc/apparmor.d/*
  failed_when: false
  when:
      - ubtu18cis_rule_1_7_1_4
  tags:
      - level2-server
      - level2-workstation
      - scored
      - patch
      - rule_1.7.1.4
      - apparmor

- name: "SCORED | 1.8.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
  when:
      - ubtu18cis_rule_1_8_1_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.8.1.1
      - motd

- name: "SCORED | 1.8.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
  when:
      - ubtu18cis_rule_1_8_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - banner

- name: "SCORED | 1.8.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
  when:
      - ubtu18cis_rule_1_8_1_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - banner

- name: "SCORED | 1.8.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      path: /etc/motd
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_1_8_1_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.8.1.4
      - permissions
      - motd

- name: "SCORED | 1.8.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      path: /etc/issue
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_1_8_1_5
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.8.1.5
      - permissions
      - banner

- name: "SCORED | 1.8.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      path: /etc/issue.net
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_1_8_1_6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.8.1.6
      - permissions
      - banner

- name: "SCORED | 1.8.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      path: /etc/gdm3/greeter.dconf-defaults
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0644
  with_items:
      - { regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]', insertafter: EOF }
      - { regexp: 'banner-message-enable', line: 'banner-message-enable=true', insertafter: '\[org\/gnome\/login-screen\]'}
      - { regexp: 'banner-message-text', line: 'banner-message-text={{ ubtu18cis_warning_banner }}', insertafter: 'banner-message-enable' }
  when:
      - ubtu18cis_rule_1_8_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.8.2
      - banner

- name: "NOTSCORED | 1.9 | PATCH | Ensure updates, patches, and additional security software are installed"
  apt:
      name: "*"
      state: latest
  when:
      - ubtu18cis_rule_1_9
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_1.9
      - patching
