---
- name: Gather distribution info
  ansible.builtin.setup:
      gather_subset: distribution,!all,!min
  when:
      - ansible_distribution is not defined
  tags:
      - always

- name: Check OS version and family
  ansible.builtin.fail:
      msg: "This role can only be run against Ubuntu 18. {{ ansible_distribution }} {{ ansible_distribution_major_version }} is not supported."
  when:
      - ansible_distribution == 'Ubuntu'
      - ansible_distribution_major_version is version_compare('18', '!=')
  tags:
      - always

- name: Check ansible version
  ansible.builtin.assert:
      that: ansible_version.full is version_compare(min_ansible_version, '>=')
      fail_msg: "You must use Ansible {{ min_ansible_version }} or greater"
      success_msg: "This role is running a supported version of ansible {{ ansible_version.full }} >= {{ min_ansible_version }}"
  tags:
      - always

- name: Gather the package facts
  ansible.builtin.package_facts:
      manager: auto
  tags:
      - always

- name: Prelim Import Tasks
  ansible.builtin.import_tasks:
      file: prelim.yml
  tags:
      - always

- name: Pre Remediate Audit Task Import
  ansible.builtin.import_tasks:
      file: pre_remediation_audit.yml
  when:
      - run_audit
  tags:
      - run_audit

- name: Run Password Parsing
  ansible.builtin.import_tasks:
      file: parse_etc_password.yml
  when:
      - ubtu18cis_section5_patch or
        ubtu18cis_section6_patch

- name: Gather the package facts
  ansible.builtin.package_facts:
      manager: auto
  tags:
      - always

- name: Include section 1 patches
  ansible.builtin.import_tasks:
      file: section_1/main.yml
  when: ubtu18cis_section1_patch
  tags:
      - section1

- name: Include section 2 patches
  ansible.builtin.import_tasks:
      file: section_2/main.yml
  when: ubtu18cis_section2_patch
  tags:
      - section2

- name: Include section 3 patches
  ansible.builtin.import_tasks:
      file: section_3/main.yml
  when: ubtu18cis_section3_patch
  tags:
      - section3

- name: Include section 4 patches
  ansible.builtin.import_tasks:
      file: section_4/main.yml
  when: ubtu18cis_section4_patch
  tags:
      - section4

- name: Include section 5 patches
  ansible.builtin.import_tasks:
      file: section_5/main.yml
  when: ubtu18cis_section5_patch
  tags:
      - section5

- name: Include section 6 patches
  ansible.builtin.import_tasks:
      file: section_6/main.yml
  when: ubtu18cis_section6_patch
  tags:
      - section6

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: reboot system
  block:
      - name: reboot system if not skipped
        ansible.builtin.reboot:
        when:
            - not ubtu18_skip_reboot

      - name: Warning a reboot required but skip option set
        ansible.builtin.debug:
            msg: "Warning!! changes have been made that require a reboot to be implemented but skip reboot was set - Can affect compliance check results"
        changed_when: true
        when:
            - ubtu18_skip_reboot

      - name: Warning for reboot
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        vars:
            warn_control_id: 'Reboot Required'

- name: Post Remediation Task
  ansible.builtin.import_tasks:
      file: post_remediation_audit.yml
  when:
      - run_audit

- name: Show Audit Summary
  ansible.builtin.debug:
      msg: "{{ audit_results.split('\n') }}"
  when:
      - run_audit
  tags:
      - run_audit

- name: If Warnings found Output count and control IDs affected
  ansible.builtin.debug:
      msg:
          - "You have {{ warn_count }} Warning(s) that require investigation(s). Their IDâ€™s are listed below:"
          - "{{ warn_control_list }}"
  when: warn_count != 0
  tags:
      - always
