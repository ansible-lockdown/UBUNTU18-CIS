---
- name: "SCORED | 3.5.1.1 | PATCH | Ensure a Firewall package is installed"
  apt:
      name: "{{ ubtu18cis_firewall_package }}"
      state: present
  when:
      - ubtu18cis_rule_3_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.1.1
      - apt
      - firewall

# Adding the allow OpenSSH rule while enabling ufw to allow ansible to run after enabling
- name: "SCORED | 3.5.2.1 | PATCH | Ensure ufw service is enabled"
  ufw:
      rule: allow
      name: OpenSSH
      state: enabled
  when:
      - ubtu18cis_rule_3_5_2_1
      - ubtu18cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.2.1
      - ufw

- name: "SCORED | 3.5.2.2 | PATCH | Ensure default deny firewall policy"
  ufw:
      default: deny
      direction: "{{ item }}"
  notify: reload ufw
  with_items:
      - incoming
      - outgoing
      - routed
  when:
      - ubtu18cis_rule_3_5_2_2
      - ubtu18cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.2.2
      - ufw

- name: "SCORED | 3.5.2.3 | PATCH | Ensure loopback traffic is configured"
  block:
      - name: "SCORED | 3.5.2.3 | PATCH | Ensure loopback traffic is configured | Set allow ufw rules"
        ufw:
            rule: allow
            direction: in
            interface: lo
        notify: reload ufw

      - name: "SCORED | 3.5.2.3 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv4"
        ufw:
            rule: deny
            direction: in
            from_ip: 127.0.0.0/8
        notify: reload ufw

      - name: "SCORED | 3.5.2.3 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv6"
        ufw:
            rule: deny
            direction: in
            from_ip: "::1"
        notify: reload ufw
        when: ubtu18cis_ipv6_required
  when:
      - ubtu18cis_rule_3_5_2_3
      - ubtu18cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.2.3
      - ufw

- name: "NOTSCORED | 3.5.2.4 | PATCH | Ensure outbound connections are configured"
  block:
      - name: "NOTSCORED | 3.5.2.4 | PATCH | Ensure outbound connections are configured | Custom ports"
        ufw:
            rule: allow
            direction: out
            to_port: '{{ item }}'
        with_items:
            - "{{ ubtu18cis_ufw_allow_out_ports }}"
        notify: reload ufw
        when: ubtu18cis_ufw_allow_out_ports != "all"

      - name: "NOTSCORED | 3.5.2.4 | PATCH | Ensure outbound connections are configured | Allow all"
        ufw:
            default: allow
            direction: outgoing
        notify: reload ufw
        when: "'all' in ubtu18cis_ufw_allow_out_ports"
  when:
      - ubtu18cis_rule_3_5_2_4
      - ubtu18cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_3.5.2.4
      - ufw

- name: "NOTSCORED | 3.5.2.5 | AUDIT | Ensure firewall rules exist for all open ports"
  block:
      - name: "NOTSCORED | 3.5.2.5 | AUDIT | Ensure firewall rules exist for all open ports | Get list of open ports"
        command: ss -4tuln
        changed_when: false
        failed_when: false
        register: ubtu18cis_3_5_2_5_open_listen_ports

      - name: "NOTSCORED | 3.5.2.5 | AUDIT | Ensure firewall rules exist for all open ports | Get list of firewall rules"
        command: ufw status
        changed_when: false
        failed_when: false
        register: ubtu18cis_3_5_2_5_firewall_rules

      - name: "NOTSCORED | 3.5.2.5 | AUDIT | Ensure firewall rules exist for all open ports | Message out settings"
        debug:
            msg:
                - "ALERT!!!!Below are the listening ports and firewall rules"
                - "Please create firewall rule for any open ports if not already done"
                - "*****---Open Listen Ports---*****"
                - "{{ ubtu18cis_3_5_2_5_open_listen_ports.stdout_lines }}"
                - "*****---Firewall Rules---*****"
                - "{{ ubtu18cis_3_5_2_5_firewall_rules.stdout_lines }}"
  when:
      - ubtu18cis_rule_3_5_2_5
      - ubtu18cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_3.5.2.5
      - ufw

# ---------------
# ---------------
# NFTables is unsupported with this role. However I have the actions commented out as a guide
# ---------------
# ---------------
- name: "NOTSCORED | 3.5.3.1 | PATCH | Ensure iptables are flushed"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  # iptables:
  #     flush: yes
  when:
      - ubtu18cis_rule_3_5_3_1
      - ubtu18cis_firewall_package == "nfptables"
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_3.5.3.1
      - nftables
      - notimplemented

- name: "SCORED | 3.5.3.2 | PATCH | Ensure a table exists"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  # command: "nft create table {{ ubtu18cis_nftables_table_name }}"
  # changed_when: ubtu18cis_3_5_3_2_new_table.rc == 0
  # failed_when: false
  # register: ubtu18cis_3_5_3_2_new_table
  when:
      - ubtu18cis_rule_3_5_3_2
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.3.2
      - nftables
      - notimplemented

- name: "SCORED | 3.5.3.3 | PATCH | Ensure base chains exist"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  # block:
  #     - name: "SCORED | 3.5.3.3 | PATCH | Ensure base chains exist | Input entry"
  #       shell: 'nft create chain inet {{ ubtu18cis_nftables_table_name }} input { type filter hook input priority 0 \; }'
  #       changed_when: ubtu18cis_3_5_3_3_base_chains_input.rc == 0
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_3_base_chains_input

  #     - name: "SCORED | 3.5.3.3 | PATCH | Ensure base chains exist | Forward entry"
  #       shell: 'nft create chain inet {{ ubtu18cis_nftables_table_name }} forward { type filter hook forward priority 0 \; }'
  #       changed_when: ubtu18cis_3_5_3_3_base_chains_forward.rc == 0
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_3_base_chains_forward

  #     - name: "SCORED | 3.5.3.3 | PATCH | Ensure base chains exist | Output entry"
  #       shell: 'nft create chain inet {{ ubtu18cis_nftables_table_name }} output { type filter hook output priority 0 \; }'
  #       changed_when: ubtu18cis_3_5_3_3_base_chains_output.rc == 0
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_3_base_chains_output
  when:
      - ubtu18cis_rule_3_5_3_3
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.3.3
      - nftables
      - notimplemented

- name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  # block:
  #     - name: "SCORED | 3.5.3.4 | AUDIT | Ensure loopback traffic is configured | Get input iif lo accept status"
  #       shell: nft list ruleset | awk '/hook input/,/}/' | grep 'iif "lo" accept'
  #       changed_when: false
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_4_loopback_iif_status

  #     - name: "SCORED | 3.5.3.4 | AUDIT | Ensure loopback traffic is configured | Get input iif lo accept status"
  #       shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'
  #       changed_when: false
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_4_loopback_input_drop_status

  #     - name: "SCORED | 3.5.3.4 | AUDIT | Ensure loopback traffic is configured | Get input iif lo accept status"
  #       shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'
  #       changed_when: false
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_4_loopback_ipv6_drop_status

  #     - name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured | Loopback iif lo accept"
  #       command: 'nft add rule inet {{ ubtu18cis_nftables_table_name }} input iif lo accept'
  #       changed_when: ubtu18cis_3_5_3_4_loopback_iif.rc == 0
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_4_loopback_iif
  #       when: "'iif \"lo\" accept' not in ubtu18cis_3_5_3_4_loopback_iif_status.stdout"

  #     - name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured | Loopback input drop"
  #       command: 'nft add rule inet {{ ubtu18cis_nftables_table_name }} input ip saddr 127\.0\.0\.0\/8 counter drop'
  #       changed_when: ubtu18cis_3_5_3_4_loopback_input_drop.rc == 0
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_4_loopback_input_drop
  #       when:
  #        - "'ip saddr 127.0.0.0/8' not in ubtu18cis_3_5_3_4_loopback_input_drop_status.stdout"
  #        - "'drop' not in ubtu18cis_3_5_3_4_loopback_input_drop_status.stdout"

  #     - name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured | Loopback ipv6 drop"
  #       command: 'nft add rule inet {{ ubtu18cis_nftables_table_name }} input ip6 saddr ::1 counter drop'
  #       changed_when: ubtu18cis_3_5_3_4_loopback_ipv6_drop.rc == 0
  #       failed_when: false
  #       register: ubtu18cis_3_5_3_4_loopback_ipv6_drop
  #       when:
  #           - "'ip6 saddr' not in ubtu18cis_3_5_3_4_loopback_ipv6_drop_status.stdout"
  #           - "'drop' not in ubtu18cis_3_5_3_4_loopback_ipv6_drop_status.stdout"
  when:
      - ubtu18cis_rule_3_5_3_4
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.3.4
      - nftables
      - notimplemented

- name: "NOTSCORED | 3.5.3.5 | PATCH | Ensure outbound and established connections are configured"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  when:
      - ubtu18cis_rule_3_5_3_5
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_3.5.3.5
      - nftables
      - notimplemented

- name: "SCORED | 3.5.3.6 | PATCH | Ensure default deny firewall policy"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  when:
      - ubtu18cis_rule_3_5_3_6
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.3.6
      - nftables
      - notimplemented

- name: "SCORED | 3.5.3.7 | PATCH | Ensure nftables service is enabled"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  # service:
  #     name: nftables
  #     state: started
  #     enabled: yes
  when:
      - ubtu18cis_rule_3_5_3_7
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.3.7
      - nftables
      - notimplemented

- name: "SCORED | 3.5.3.8 | PATCH | Ensure nftables rules are permanent"
  debug:
      msg: "Warning: NFTables is not supported in this role. Please us UFW or iptables"
  when:
      - ubtu18cis_rule_3_5_3_8
      - ubtu18cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.3.8
      - nftables
      - notimplemented

- name: "SCORED | 3.5.4.1.1 | PATCH | Ensure default deny firewall policy"
  block:
      - name: "SCORED | 3.5.4.1.1 | PATCH | Ensure default deny firewall policy | Configure SSH to be allowed in"
        iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'

      - name: "SCORED | 3.5.4.1.1 | PATCH | Ensure default deny firewall policy | Configure SSH to be allowed out"
        iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'

      - name: "SCORED | 3.5.4.1.1 | PATCH | Ensure default deny firewall policy | Enable apt traffic"
        iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT

      - name: "SCORED | 3.5.4.1.1 | PATCH | Ensure default deny firewall policy | Set drop items"
        iptables:
            policy: DROP
            chain: "{{ item }}"
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - ubtu18cis_rule_3_5_4_1_1
      - ubtu18cis_firewall_package == "iptables"
      - not ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.4.1.1
      - iptables

- name: "SCORED | 3.5.4.1.2 | PATCH | Ensure loopback traffic is configured"
  block:
      - name: "SCORED | 3.5.4.1.2 | PATCH | Ensure loopback traffic is configured | INPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT

      - name: "SCORED | 3.5.4.1.2 | PATCH | Ensure loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT

      - name: "SCORED | 3.5.4.1.2 | PATCH | Ensure loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            source: 127.0.0.0/8
            jump: DROP
  when:
      - ubtu18cis_rule_3_5_4_1_2
      - ubtu18cis_firewall_package == "iptables"
      - not ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.4.1.2
      - iptables

- name: "NOTSCORED | 3.5.4.1.3 | PATCH | Ensure outbound and established connections are configured"
  iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
  when:
      - ubtu18cis_rule_3_5_4_1_3
      - ubtu18cis_firewall_package == "iptables"
      - not ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_3.5.4.1.3
      - iptables

- name: "SCORED | 3.5.4.1.4 | AUDIT | Ensure firewall rules exist for all open ports"
  block:
      - name: "SCORED | 3.5.4.1.4 | AUDIT | Ensure firewall rules exist for all open ports | Get list of open ports"
        command: ss -4tuln
        changed_when: false
        failed_when: false
        register: ubtu18cis_3_5_4_1_4_open_ports

      - name: "SCORED | 3.5.4.1.4 | AUDIT | Ensure firewall rules exist for all open ports | Get list of rules"
        command: iptables -L INPUT -v -n
        changed_when: false
        failed_when: false
        register: ubtu18cis_3_5_4_1_4_current_rules

      - name: "SCORED | 3.5.4.1.4 | AUDIT | Ensure firewall rules exist for all open ports | Alert about settings"
        debug:
            msg:
                - "ALERT!!!!Below is the list the open ports and current rules"
                - "Please create a rule for any open port that does not have a current rule"
                - "Open Ports:"
                - "{{ ubtu18cis_3_5_4_1_4_open_ports.stdout_lines }}"
                - "Current Rules:"
                - "{{ ubtu18cis_3_5_4_1_4_current_rules.stdout_lines }}"
  when:
      - ubtu18cis_rule_3_5_4_1_4
      - ubtu18cis_firewall_package == "iptables"
      - not ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_3.5.4.1.4
      - iptables

# ---------------
# ---------------
# This is not a control however using the iptables module only writes to memery
# if a reboot occurs that means changes can revert. This task will make the
# above iptables settings permanent
# ---------------
# ---------------
- name: "Make IPTables persistent | Not a control"
  block:
      - name: "Make IPTables persistent | Install iptables-persistent"
        apt:
            name: iptables-persistent
            state: present

      - name: "Make IPTables persistent | Save to persistent files"
        shell: bash -c "iptables-save > /etc/iptables/rules.v4"
        changed_when: ubtu18cis_iptables_save.rc == 0
        failed_when: ubtu18cis_iptables_save.rc > 0
        register: ubtu18cis_iptables_save
  when:
      - ubtu18cis_firewall_package == "iptables"
      - not ubtu18cis_iptables_v6
      - ubtu18cis_save_iptables_cis_rules
      - ubtu18cis_rule_3_5_4_1_1 or
        ubtu18cis_rule_3_5_4_1_2 or
        ubtu18cis_rule_3_5_4_1_3 or
        ubtu18cis_rule_3_5_4_1_4

- name: "SCORED | 3.5.4.2.1 | PATCH | Ensure IPv6 default deny firewall policy"
  block:
      - name: "SCORED | 3.5.4.2.1 | PATCH | Ensure IPv6 default deny firewall policy | Configure SSH to be allowed out"
        iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
            ip_version: ipv6

      - name: "SCORED | 3.5.4.2.1 | PATCH | Ensure IPv6 default deny firewall policy | Enable apt traffic"
        iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT
            ip_version: ipv6

      - name: "SCORED | 3.5.4.2.1 | PATCH | Ensure IPv6 default deny firewall policy | Set drop items"
        iptables:
            policy: DROP
            chain: "{{ item }}"
            ip_version: ipv6
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - ubtu18cis_rule_3_5_4_2_1
      - ubtu18cis_firewall_package == "iptables"
      - ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.4.2.1
      - ip6tables

- name: "SCORED | 3.5.4.2.2 | PATCH | Ensure IPv6 loopback traffic is configured"
  block:
      - name: "SCORED | 3.5.4.2.2 | PATCH | Ensure IPv6 loopback traffic is configured | INPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "SCORED | 3.5.4.2.2 | PATCH | Ensure IPv6 loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "SCORED | 3.5.4.2.2 | PATCH | Ensure IPv6 loopback traffic is configured | INPUT loopback drop"
        iptables:
            action: append
            chain: INPUT
            source: ::1
            jump: DROP
            ip_version: ipv6
  when:
      - ubtu18cis_rule_3_5_4_2_2
      - ubtu18cis_firewall_package == "iptables"
      - ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_3.5.4.2.2
      - ip6tables

- name: "NOTSCORED | 3.5.4.2.3 | PATCH | Ensure IPv6 outbound and established connections are configured"
  iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
      ip_version: ipv6
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
  when:
      - ubtu18cis_rule_3_5_4_2_3
      - ubtu18cis_firewall_package == "iptables"
      - ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_3.5.4.2.3
      - ip6tables

- name: "NOTSCORED | 3.5.4.2.4 | AUDIT | Ensure IPv6 firewall rules exist for all open ports"
  block:
      - name: "NOTSCORED | 3.5.4.2.4 | AUDIT | Ensure IPv6 firewall rules exist for all open ports | Get list of open ports"
        command: ss -6tuln
        changed_when: false
        failed_when: false
        register: ubtu18cis_3_5_4_2_4_open_ports

      - name: "NOTSCORED | 3.5.4.2.4 | AUDIT | Ensure IPv6 firewall rules exist for all open ports | Get list of rules"
        command: ip6tables -L INPUT -v -n
        changed_when: false
        failed_when: false
        register: ubtu18cis_3_5_4_2_4_current_rules

      - name: "NOTSCORED | 3.5.4.2.4 | AUDIT | Ensure IPv6 firewall rules exist for all open ports | Alert about settings"
        debug:
            msg:
                - "ALERT!!!!Below is the list the open ports and current rules"
                - "Please create a rule for any open port that does not have a current rule"
                - "Open Ports:"
                - "{{ ubtu18cis_3_5_4_2_4_open_ports.stdout_lines }}"
                - "Current Rules:"
                - "{{ ubtu18cis_3_5_4_2_4_current_rules.stdout_lines }}"
  when:
      - ubtu18cis_rule_3_5_4_2_4
      - ubtu18cis_firewall_package == "iptables"
      - ubtu18cis_iptables_v6
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_3.5.4.2.4
      - ip6tables

# ---------------
# ---------------
# This is not a control however using the ip6tables module only writes to memery
# if a reboot occurs that means changes can revert. This task will make the
# above ip6tables settings permanent
# ---------------
# ---------------
- name: "Make IP6Tables persistent | Not a control"
  block:
      - name: "Make IP6Tables persistent | Install iptables-persistent"
        apt:
            name: iptables-persistent
            state: present

      - name: "Make IP6Tables persistent | Save to persistent files"
        shell: bash -c "ip6tables-save > /etc/iptables/rules.v6"
        changed_when: ubtu18cis_ip6tables_save.rc == 0
        failed_when: ubtu18cis_ip6tables_save.rc > 0
        register: ubtu18cis_ip6tables_save
  when:
      - ubtu18cis_firewall_package == "iptables"
      - ubtu18cis_iptables_v6
      - ubtu18cis_save_iptables_cis_rules
      - ubtu18cis_rule_3_5_4_2_1 or
        ubtu18cis_rule_3_5_4_2_2 or
        ubtu18cis_rule_3_5_4_2_3 or
        ubtu18cis_rule_3_5_4_2_4
