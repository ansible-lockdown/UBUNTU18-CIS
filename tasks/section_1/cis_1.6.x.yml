---
- name: "AUTOMATED | 1.6.1.1 | PATCH | Ensure AppArmor is installed"
  apt:
      name: ['apparmor', 'apparmor-utils']
      state: present
  when:
      - ubtu18cis_rule_1_6_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.1
      - apparmor

- name: "AUTOMATED | 1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
  block:
      - name: "AUTOMATED | 1.6.1.2 | AUDIT | Ensure AppArmor is enabled in the bootloader configuration | Get current settings"
        shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_6_1_2_cmdline_settings

      - name: "AUTOMATED | 1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX'
            line: 'GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor {{ ubtu18cis_1_6_1_2_cmdline_settings.stdout }}"'
            insertafter: '^GRUB_'
        when:
            - "'apparmor' not in ubtu18cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' not in ubtu18cis_1_6_1_2_cmdline_settings.stdout"
        notify: grub update

      - name: "AUTOMATED | 1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist | Replace apparmor settings when exists"
        replace:
            path: /etc/default/grub
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
        with_items:
            - { regexp: 'apparmor=\S+', replace: 'apparmor=1' }
            - { regexp: 'security=\S+', replace: 'security=apparmor' }
        when:
            - "'apparmor' in ubtu18cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' in ubtu18cis_1_6_1_2_cmdline_settings.stdout"
        notify: grub update
  when:
      - ubtu18cis_rule_1_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.2
      - apparmor

- name: "AUTOMATED | 1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode"
  command: aa-enforce /etc/apparmor.d/*
  failed_when: false
  when:
      - ubtu18cis_rule_1_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.7.1.3
      - apparmor

- name: "AUTOMATED | 1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing"
  command: aa-enforce /etc/apparmor.d/*
  failed_when: false
  when:
      - ubtu18cis_rule_1_6_1_4
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_1.6.1.4
      - apparmor

# moved to 1.5.x, all 1.6.x controls
# - name: "SCORED | 1.6.1 | AUDIT | Ensure XD/NX support is enabled"
#   block:
#       - name: "SCORED | 1.6.1 | AUDIT | Ensure XD/NX support is enabled | Find status of XD/NX"
#         shell: "journalctl | grep 'protection: active'"
#         changed_when: false
#         failed_when: false
#         register: ubtu18cis_1_6_1_xdnx_status

#       - name: "SCORED | 1.6.1 | AUDIT | Ensure XD/NX support is enabled | Alert if XD/NX is not enabled"
#         debug:
#             msg:
#                 - "ALERT!!!!You do not have XD/NX (Execute Disable/No Execute) enabled"
#                 - "To conform to CIS standards this needs to be enabled"
#         when: "'active' not in ubtu18cis_1_6_1_xdnx_status.stdout"
#   when:
#       - ubtu18cis_rule_1_6_1
#   tags:
#       - level1-server
#       - level1-workstation
#       - scored
#       - audit
#       - rule_1.6.1
#       - xd/nx

# - name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
#   block:
#       - name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled | Set ASLR settings"
#         lineinfile:
#             path: /etc/sysctl.conf
#             regexp: '^kernel.randomize_va_space'
#             line: 'kernel.randomize_va_space = 2'

#       - name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled | Set active kernel parameter"
#         sysctl:
#             name: kernel.randomize_va_space
#             value: '2'
#   when:
#       - ubtu18cis_rule_1_6_2
#   tags:
#       - level1-server
#       - level1-workstation
#       - scored
#       - patch
#       - rule_1.6.2
#       - aslr

# - name: "SCORED | 1.6.3 | PATCH | Ensure prelink is disabled"
#   block:
#       - name: "SCORED | 1.6.3 | PATCH | Ensure prelink is disabled | Restore binaries to normal"
#         command: prelink -ua
#         changed_when: false
#         failed_when: false

#       - name: "SCORED | 1.6.3 | PATCH | Ensure prelink is disabled | Remove prelink package"
#         apt:
#             name: prelink
#             state: absent
#   when:
#       - ubtu18cis_rule_1_6_3
#   tags:
#       - level1-server
#       - level1-workstation
#       - scored
#       - patch
#       - rule_1.6.3
#       - prelink

# - name: "SCORED | 1.6.4 | PATCH | Ensure core dumps are restricted"
#   block:
#       - name: "SCORED | 1.6.4 | PATCH | Ensure core dumps are restricted"
#         lineinfile:
#             path: /etc/security/limits.conf
#             regexp: '^#?\\*.*core'
#             line: '*                hard    core            0'
#             insertbefore: '^# End of file'

#       - name: "SCORED | 1.6.4 | PATCH | Ensure core dumps are restricted"
#         sysctl:
#             name: fs.suid_dumpable
#             value: '0'
#             state: present
#             reload: yes
#             sysctl_set: yes
#             ignoreerrors: yes
#   when:
#       - ubtu18cis_rule_1_6_4
#   tags:
#       - level1-server
#       - level1-workstation
#       - scored
#       - patch
#       - rule_1.6.4
#       - coredump