---
- name: "NOTSCORED | 6.1.1 | AUDIT | Audit system file permissions"
  block:
      - name: "NOTSCORED | 6.1.1 | AUDIT | Audit system file permissions | Register package list"
        command: ls -a /bin/
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_1_packages

      # - name: "NOTSCORED | 6.1.1 | AUDIT | Audit system file permissions | Audit the packages"
      #   command: dpkg --verify {{ item }}
      #   changed_when: false
      #   failed_when: false
      #   with_items:
      #       - "{{ ubtu18cis_6_1_1_packages.stdout_lines }}"
      #   register: ubtu18cis_6_1_1_packages_audited

      - name: "NOTSCORED | 6.1.1 | AUDIT | Audit system file permissions | Message out packages results for review"
        debug:
            msg:
                - "ALERT!!!! Below are the packages that need to be reviewed."
                - "You can run dpkg --verify <package name> and if nothing is returned the package is installed correctly"
                - "{{ ubtu18cis_6_1_1_packages.stdout_lines }}"
  when:
      - ubtu18cis_rule_6_1_1
  tags:
      - level2-server
      - level2-workstation
      - notscored
      - audit
      - rule_6.1.1
      - permissions

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      path: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.2
      - permissions

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      path: /etc/gshadow-
      owner: root
      group: shadow
      mode: 0640
  when:
      - ubtu18cis_rule_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.3
      - permissions

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      path: /etc/shadow
      owner: root
      group: shadow
      mode: 0640
  when:
      - ubtu18cis_rule_6_1_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.4
      - permissions

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      path: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_6_1_5
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.5
      - permissions

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      path: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - ubtu18cis_rule_6_1_6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.6
      - permissions

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      path: /etc/shadow-
      owner: root
      group: shadow
      mode: 0600
  when:
      - ubtu18cis_rule_6_1_7
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.7
      - permissions

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      path: /etc/group-
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_6_1_8
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.8
      - permissions

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      path: /etc/gshadow
      owner: root
      group: shadow
      mode: 0640
  when:
      - ubtu18cis_rule_6_1_9
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.9
      - permissions

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  block:
      - name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist | Get list of world-writable files"
        shell: find {{ item.mount }} -xdev -type f -perm -0002
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_10_wwf
        with_items:
            - "{{ ansible_mounts }}"

      - name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist | Adjust world-writable files if they exist"
        file:
            path: "{{ item }}"
            mode: o-w
        with_items:
            - "{{ ubtu18cis_6_1_10_wwf.results | map(attribute='stdout_lines') | flatten  }}"
        when: ubtu18cis_no_world_write_adjust
  when:
      - ubtu18cis_rule_6_1_10
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.10
      - permissions

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  block:
      - name: "SCORED | 6.1.11 | AUDIT | Ensure no unowned files or directories exist | Get unowned files or directories"
        shell: find {{ item.mount }} -xdev -nouser
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_11_no_user_items
        with_items:
            - "{{ ansible_mounts }}"

      - name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist | Flatten no_user_items results for easier use"
        set_fact:
            ubtu18cis_6_1_11_no_user_items_flatten: "{{ ubtu18cis_6_1_11_no_user_items.results | map(attribute='stdout_lines') | flatten }}"

      - name: "SCORED | 6.1.11 | AUDIT | Ensure no unowned files or directories exist | Alert on unowned files and directories"
        debug:
            msg:
                - "ALERT!!!You have unowned files and are configured to not auto-remediate for this task"
                - "Please review the files/directories below and assign an owner"
                - "{{ ubtu18cis_6_1_11_no_user_items_flatten }}"
        when:
            - not ubtu18cis_no_owner_adjust
            - ubtu18cis_6_1_11_no_user_items_flatten != ""

      - name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist | Set unowned files/directories to configured owner"
        file:
            path: "{{ item }}"
            owner: "{{ ubtu18cis_unowned_owner }}"
        with_items:
            - "{{ ubtu18cis_6_1_11_no_user_items_flatten }}"
        when:
            - ubtu18cis_no_owner_adjust
            - ubtu18cis_6_1_11_no_user_items_flatten != ""
  when:
      - ubtu18cis_rule_6_1_11
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.11
      - permissions

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  block:
      - name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Get ungrouped fiels or directories"
        shell: find {{ item.mount }} -xdev -nogroup
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_12_ungrouped_items
        with_items:
            - "{{ ansible_mounts }}"

      - name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Flatten ungrouped_items results for easier use"
        set_fact:
            ubtu18cis_6_1_12_ungrouped_items_flatten: "{{ ubtu18cis_6_1_12_ungrouped_items.results | map(attribute='stdout_lines') | flatten }}"

      - name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Alert on ungrouped files and directories"
        debug:
            msg:
                - "ALERT!!!!You have ungrouped files/directories and are configured to not auto-remediate for this task"
                - "Please review the files/directories below and assign a group"
                - "{{ ubtu18cis_6_1_12_ungrouped_items_flatten }}"
        when:
            - not ubtu18cis_no_group_adjust
            - ubtu18cis_6_1_12_ungrouped_items_flatten != ""

      - name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Set ungrouped files/directories to configured group"
        file:
            path: "{{ item }}"
            group: "{{ ubtu18cis_ungrouped_group }}"
        with_items:
            - "{{ ubtu18cis_6_1_12_ungrouped_items_flatten }}"
        when:
            - ubtu18cis_no_group_adjust
            - ubtu18cis_6_1_12_ungrouped_items_flatten != ""
  when:
      - ubtu18cis_rule_6_1_12
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.1.12
      - permissions

- name: "NOTSCORED | 6.1.13 | AUDIT | Audit SUID executables"
  block:
      - name: "NOTSCORED | 6.1.13 | AUDIT | Audit SUID executables | Find SUID executables"
        # shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -4000
        shell: find {{ item.mount }} -xdev -type f -perm -4000
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_13_suid_executables
        with_items:
            - "{{ ansible_mounts }}"

      - name: "NOTSCORED | 6.1.13 | AUDIT | Audit SUID executables | Flatten suid_executables results for easier use"
        set_fact:
            ubtu18cis_6_1_13_suid_executables_flatten: "{{ ubtu18cis_6_1_13_suid_executables.results | map(attribute='stdout_lines') | flatten }}"

      - name: "NOTSCORED | 6.1.13 | AUDIT | Audit SUID executables | Alert SUID executables exist"
        debug:
            msg:
                - "ALERT!!!!You have SUID executables"
                - "The files are listed below, please confirm the integrity of these binaries"
                - "{{ ubtu18cis_6_1_13_suid_executables_flatten }}"
        when:
            - ubtu18cis_6_1_13_suid_executables_flatten != ""
            - not ubtu18cis_suid_adjust

      - name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables | Remove SUID bit"
        file:
            path: "{{ item }}"
            mode: 'u-s'
        with_items:
            - "{{ ubtu18cis_6_1_13_suid_executables_flatten }}"
        when:
            - ubtu18cis_suid_adjust
            - ubtu18cis_6_1_13_suid_executables_flatten != ""
  when:
      - ubtu18cis_rule_6_1_13
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_6.1.13
      - permissions

- name: "NOTSCORED | 6.1.14 | AUDIT | Audit SGID executables"
  block:
      - name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables | Find SGID executables"
        shell: find {{ item }} -xdev -type f -perm -2000
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_14_sgid_executables
        with_items:
            - "{{ ansible_mounts }}"

      - name: "NOTSCORED | 6.1.14 | AUDIT | Audit SGID executables | Flatten sgid_executables results for easier use"
        set_fact:
            ubtu18cis_6_1_14_sgid_executables_flatten: "{{ ubtu18cis_6_1_14_sgid_executables.results | map(attribute='stdout_lines') | flatten }}"

      - name: "NOTSCORED | 6.1.14 | AUDIT | Audit SGID executables | Alert SGID executables exist"
        debug:
            msg:
                - "ALERT!!!!You have SGID executables"
                - "The files are listed below, please review the integrity of these binaries"
                - "{{ ubtu18cis_6_1_14_sgid_executables_flatten }}"
        when: ubtu18cis_6_1_14_sgid_executables_flatten != []
  when:
      - ubtu18cis_rule_6_1_14
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_6.1.14
      - permissions

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  block:
      - name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty | Find users with no password"
        shell: awk -F":" '($2 == "" ) { print $1 }' /etc/shadow
        register: ubtu18cis_6_2_1_empty_password_acct
        changed_when: no
        check_mode: no

      - name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty | Lock users with empty password"
        user:
            name: "{{ item }}"
            password_lock: yes
        with_items:
            - "{{ ubtu18cis_6_2_1_empty_password_acct.stdout_lines }}"
        when: ubtu18cis_6_2_1_empty_password_acct.stdout != ""
  when:
      - ubtu18cis_rule_6_2_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.1
      - user
      - permissions

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy + entries exist in /etc/passwd"
  replace:
      path: /etc/passwd
      regexp: '\+:'
      replace: ':'
  when:
      - ubtu18cis_rule_6_2_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.2
      - user

- name: "SCORED | 6.2.3 | PATCH | Ensure all users' home directories exist"
  block:
      - name: capture audit task for missing homedirs
        block: &u18s_homedir_audit
            - name: "SCORED | 6.2.3 | PATCH | Ensure all users' home directories exist | Find users missing home directories"
              shell: pwck -r | grep -P {{ ld_regex | quote }}
              check_mode: no
              register: ubtu18cis_users_missing_home
              changed_when: ubtu18cis_6_2_3_audit | length > 0
              # failed_when: 0: success, 1: no grep match, 2: pwck found something
              failed_when: ubtu18cis_users_missing_home.rc not in [0,1,2]

      ### NOTE: due to https://github.com/ansible/ansible/issues/24862 This is a shell command, and is quite frankly less than ideal.
      - name: "SCORED | 6.2.3 | PATCH | Ensure all users' home directories exist| Creates home directories"
        command: "mkhomedir_helper {{ item }}"
        # check_mode: "{{ ubtu18cis_disruptive_check_mode }}"
        with_items: "{{ ubtu18cis_6_2_3_audit | map(attribute='id') | list }}"
        when:
            - ubtu18cis_users_missing_home is changed
            - ubtu18cis_disruption_high

      ### NOTE: Now we need to address that SELINUX will not let mkhomedir_helper create home directories for UUID < 500, so the ftp user will still show up in a pwck. Not sure this is needed, I need to confirm if that user is removed in an earlier task.
      ### ^ Likely doesn't matter as 6.2.7 defines "local interactive users" as those w/ uid 1000-4999
      - name: replay audit task
        block: *u18s_homedir_audit

      # CAUTION: debug loops don't show changed since 2.4:
      # Fix: https://github.com/ansible/ansible/pull/59958
      - name: "SCORED | 6.2.3 | PATCH | Ensure all users' home directories exist | Alert about correcting owner and group"
        debug: msg="You will need to mkdir -p {{ item }} and chown properly to the correct owner and group."
        with_items: "{{ ubtu18cis_6_2_3_audit | map(attribute='dir') | list }}"
        changed_when: ubtu18cis_audit_complex
        when:
            - ubtu18cis_users_missing_home is changed
  vars:
      ld_regex: >-
          ^user '(?P<user>.*)': directory '(?P<dir>.*)' does not exist$
      ld_users: "{{ ubtu18cis_users_missing_home.stdout_lines | map('regex_replace', ld_regex, '\\g<user>') | list }}"
      ubtu18cis_6_2_3_audit: "{{ ubtu18cis_passwd | selectattr('uid', '>=', 1000) | selectattr('id', 'in', ld_users) | list }}"
  when:
      - ubtu18cis_rule_6_2_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.3
      - user

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  replace:
      path: /etc/shadow
      regexp: '\+:'
      replace: ':'
  when:
      - ubtu18cis_rule_6_2_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.4
      - user

- name: "SCORED | 6.2.5 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  replace:
      path: /etc/group
      regexp: '\+:'
      replace: ':'
  when:
      - ubtu18cis_rule_6_2_5
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.5
      - user

- name: "SCORED | 6.2.6 | PATCH | Ensure root is the only UID 0 account"
  block:
      - name: "SCORED | 6.2.6 | AUDIT | Ensure root is the only UID 0 account | Get non-root users with UID of 0"
        shell: awk -F":" '($3 == 0 && $1 != \"root\") {i++;print $1 }' /etc/passwd
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_2_6_uid_0_notroot

      - name: "SCORED | 6.2.6 | PATCH | Ensure root is the only UID 0 account | Lock UID 0 users"
        user:
            name: "{{ item }}"
            password_lock: yes
        with_items:
            - "{{ ubtu18cis_6_2_6_uid_0_notroot.stdout_lines }}"
        when:
            - ubtu18cis_disruption_high
            - ubtu18cis_6_2_6_uid_0_notroot.stdout != ""

      - name: "SCORED | 6.2.6 | AUDIT | Ensure root is the only UID 0 account | Alert about accounts disruption high"
        debug:
            msg:
                - "ALERT!!!! You have non-root users with a UID of 0 and ubtu18cis_disruption_high enabled"
                - "This means the following accounts were password locked and will need to have the UID's manually adjusted"
                - "{{ ubtu18cis_6_2_6_uid_0_notroot.stdout_lines }}"
        when:
            - ubtu18cis_disruption_high
            - ubtu18cis_6_2_6_uid_0_notroot.stdout != ""

      - name: "SCORED | 6.2.6 | AUDIT | Ensure root is the only UID 0 account | Alert about accounts disruption low"
        debug:
            msg:
                - "ALERT!!!! You have non-root users with a UID of 0 and ubtu18cis_disruption_high disabled"
                - "This means no action was taken, you will need to have the UID's of the users below manually adjusted"
                - "{{ ubtu18cis_6_2_6_uid_0_notroot.stdout_lines }}"
        when:
            - not ubtu18cis_disruption_high
            - ubtu18cis_6_2_6_uid_0_notroot.stdout != ""
  when:
      - ubtu18cis_rule_6_2_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - scored
      - rule_6.2.6
      - user
      - root

- name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity"
  block:
      - name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity | Determine empty value"
        shell: 'echo $PATH | grep ::'
        changed_when: False
        failed_when: ubtu18cis_6_2_7_path_colon.rc == 0
        register: ubtu18cis_6_2_7_path_colon

      - name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity | Determine colon end"
        shell: 'echo $PATH | grep :$'
        changed_when: False
        failed_when: ubtu18cis_6_2_7_path_colon_end.rc == 0
        register: ubtu18cis_6_2_7_path_colon_end

      - name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity | Determine working dir"
        shell: echo "$PATH"
        changed_when: False
        failed_when: '"." in ubtu18cis_6_2_7_working_dir.stdout_lines'
        register: ubtu18cis_6_2_7_working_dir
      - debug: var=ubtu18cis_6_2_7_working_dir

      - name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity | Check paths"
        stat:
            path: "{{ item }}"
        register: ubtu18cis_6_2_7_path_stat
        with_items:
            - "{{ ubtu18cis_6_2_7_working_dir.stdout.split(':') }}"

      - debug: var=ubtu18cis_6_2_7_path_stat

      - name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity | Alert on empty value, colon end, and no working dir"
        debug:
            msg:
                - "The following paths have no working directory: {{ ubtu18cis_6_2_7_path_stat.results | selectattr('stat.exists','equalto','false') | map(attribute='item') | list }}"

      # - name: "SCORED | 6.2.7 | PATCH | Ensure root PATH Integrity | Set permissions"
      #   file:
      #       path: "{{ item }}"
      #       owner: root
      #       mode: 'o-w,g-w'
      #       follow: yes
      #       state: directory
      #   with_items:
      #       - "{{ ubtu18cis_6_2_7_path_stat | selectattr('exists','==','true') | map(attribute='path') }}"
  when:
      - ubtu18cis_rule_6_2_7
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.7
      - user
      - root
      - notimplemented

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  block:
      - name: "SCORED | 6.2.8 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive | Stat home directories"
        stat:
            path: "{{ item }}"
        with_items: "{{ ubtu18cis_passwd | selectattr('uid', '>=', 1000) | selectattr('uid', '!=', 65534) | map(attribute='dir') | list }}"
        register: ubtu18cis_6_2_8_audit

      - name: "SCORED | 6.2.8 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive | Find home directories more 750"
        command: find -H {{ item.0 | quote }} -not -type l -perm /027
        register: ubtu18cis_6_2_8_patch_audit
        changed_when: ubtu18cis_6_2_8_patch_audit.stdout != ""
        when:
            - item.1.exists
        with_together:
            - "{{ ubtu18cis_6_2_8_audit.results | map(attribute='item') | list }}"
            - "{{ ubtu18cis_6_2_8_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      - name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive | Set home perms"
        file:
            path: "{{ item.0 }}"
            recurse: yes
            mode: a-st,g-w,o-rwx
        register: ubtu18cis_6_2_8_patch
        when:
            - ubtu18cis_disruption_high
            - item.1.exists
        with_together:
            - "{{ ubtu18cis_6_2_8_audit.results | map(attribute='item') | list }}"
            - "{{ ubtu18cis_6_2_8_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      # set default ACLs so the homedir has an effective umask of 0027
      - name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive | Set ACL's"
        acl:
            path: "{{ item.0 }}"
            default: yes
            state: present
            recursive: yes
            etype: "{{ item.1.etype }}"
            permissions: "{{ item.1.mode }}"
        when: not ubtu18cis_system_is_container
        with_nested:
            - "{{ (ansible_check_mode | ternary(ubtu18cis_6_2_8_patch_audit, ubtu18cis_6_2_8_patch)).results |
              rejectattr('skipped', 'defined') | map(attribute='item') | map('first') | list }}"
            -
                - etype: group
                  mode: rx
                - etype: other
                  mode: '0'
  when:
      - ubtu18cis_rule_6_2_8
      - ubtu18cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.8
      - user

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  file:
      path: "{{ item.dir }}"
      owner: "{{ item.id }}"
      state: directory
  with_items: "{{ ubtu18cis_passwd }}"
  loop_control:
      label: "{{ ubtu18cis_passwd_label }}"
  when:
      - ubtu18cis_rule_6_2_9
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.9
      - user

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  block:
      - name: "SCORED | 6.2.10 | AUDIT | Ensure users' dot files are not group or world-writable | Check for files"
        shell: find /home/ -name "\.*" -perm /g+w,o+w
        changed_when: no
        failed_when: no
        register: ubtu18cis_6_2_10_audit

      - name: "SCORED | 6.2.10 | AUDIT | Ensure users' dot files are not group or world-writable | Alert on files found"
        debug:
            msg: "Good news! We have not found any group or world-writable dot files on your sytem"
        failed_when: false
        changed_when: false
        when:
            - ubtu18cis_6_2_10_audit.stdout == ""

      - name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world-writable | Changes files if configured"
        file:
            path: '{{ item }}'
            mode: go-w
        with_items: "{{ ubtu18cis_6_2_10_audit.stdout_lines }}"
        when:
            - ubtu18cis_6_2_10_audit.stdout != ""
            - ubtu18cis_dotperm_ansibleManaged
  when:
      - ubtu18cis_rule_6_2_10
      - ubtu18cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.10
      - user

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
      dest: "~{{ item }}/.forward"
      state: absent
  with_items:
      - "{{ ubtu18cis_users.stdout_lines }}"
  when:
      - ubtu18cis_rule_6_2_11
      - ubtu18cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.11
      - user

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
      dest: "~{{ item }}/.netrc"
      state: absent
  with_items:
      - "{{ ubtu18cis_users.stdout_lines }}"
  when:
      - ubtu18cis_rule_6_2_12
      - ubtu18cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.12
      - user

- name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc Files are not group or world accessible"
  file:
      dest: "~{{ item }}/.netrc"
      mode: go-w
  failed_when: false
  with_items:
      - "{{ ubtu18cis_users.stdout_lines }}"
  when:
      - ubtu18cis_rule_6_2_13
      - ubtu18cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.13
      - user

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
      dest: "~{{ item }}/.rhosts"
      state: absent
  with_items:
      - "{{ ubtu18cis_users.stdout_lines }}"
  when:
      - ubtu18cis_rule_6_2_14
      - ubtu18cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_6.2.14
      - user

- name: "SCORED | 6.2.15 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group"
  block:
      - name: "SCORED | 6.2.15 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Check /etc/passwd entries"
        shell: pwck -r | grep 'no group' | awk '{ gsub("[:\47]",""); print $2}'
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_2_15_passwd_gid_check

      - name: "SCORED | 6.2.15 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print message that all groups match between passwd and group files"
        debug:
            msg: "Good News! There are no users that have non-existent GUIDs (Groups)"
        when: ubtu18cis_6_2_15_passwd_gid_check.stdout == ""

      - name: "SCORED | 6.2.15 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print warning about users with invalid GIDs missing GID entries in /etc/group"
        debug:
            msg: "WARNING!!!! The following users have non-existent GIDs (Groups): {{ ubtu18cis_6_2_15_passwd_gid_check.stdout_lines | join (', ') }}"
        when: ubtu18cis_6_2_15_passwd_gid_check.stdout != ""
  when:
      - ubtu18cis_rule_6_2_15
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_6.2.15
      - groups

- name: "SCORED | 6.2.16 | AUDIT | Ensure no duplicate UIDs exist"
  block:
      - name: "SCORED | 6.2.16 | AUDIT | Ensure no duplicate UIDs exist | Check for duplicate UIDs"
        shell: "pwck -r | awk -F: '{if ($3 in uid) print $1 ; else uid[$3]}' /etc/passwd"
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_2_16_user_uid_check

      - name: "SCORED | 6.2.16 | AUDIT | Ensure no duplicate UIDs exist | Print message that no duplicate UIDs exist"
        debug:
            msg: "Good News! There are no duplicate UID's in the system"
        when: ubtu18cis_6_2_16_user_uid_check.stdout == ""

      - name: "SCORED | 6.2.16 | AUDIT | Ensure no duplicate UIDs exist | Print warning about users with duplicate UIDs"
        debug:
            msg: "Warning!!!! The following users have UIDs that are duplicates: {{ ubtu18cis_6_2_16_user_uid_check.stdout_lines }}"
        when: ubtu18cis_6_2_16_user_uid_check.stdout != ""
  when:
      - ubtu18cis_rule_6_2_16
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_6.2.16
      - user

- name: "SCORED | 6.2.17 | AUDIT | Ensure no duplicate GIDs exist"
  block:
      - name: "SCORED | 6.2.17 | AUDIT | Ensure no duplicate GIDs exist | Check for duplicate GIDs"
        shell: "pwck -r | awk -F: '{if ($3 in users) print $1 ; else users[$3]}' /etc/group"
        changed_when: no
        failed_when: no
        register: user_user_check

      - name: "SCORED | 6.2.17 | AUDIT | Ensure no duplicate GIDs exist | Print message that no duplicate GID's exist"
        debug:
            msg: "Good News! There are no duplicate GIDs in the system"
        when: user_user_check.stdout == ""

      - name: "SCORED | 6.2.17 | AUDIT | Ensure no duplicate GIDs exist | Print warning about users with duplicate GIDs"
        debug:
            msg: "Warning: The following groups have duplicate GIDs: {{ user_user_check.stdout_lines }}"
        when: user_user_check.stdout != ""
  when:
      - ubtu18cis_rule_6_2_17
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_6.2.17
      - groups

- name: "SCORED | 6.2.18 | AUDIT | Ensure no duplicate user names exist"
  block:
      - name: "SCORED | 6.2.18 | AUDIT | Ensure no duplicate user names exist | Check for duplicate User Names"
        shell: "pwck -r | awk -F: '{if ($1 in users) print $1 ; else users[$1]}' /etc/passwd"
        changed_when: no
        failed_when: no
        register: ubtu18cis_6_2_18_user_username_check

      - name: "SCORED | 6.2.18 | AUDIT | Ensure no duplicate user names exist | Print message that no duplicate user names exist"
        debug:
            msg: "Good News! There are no duplicate user names in the system"
        when: ubtu18cis_6_2_18_user_username_check.stdout == ""

      - name: "SCORED | 6.2.18 | AUDIT | Ensure no duplicate user names exist | Print warning about users with duplicate User Names"
        debug:
            msg: "Warning: The following user names are duplicates: {{ ubtu18cis_6_2_18_user_username_check.stdout_lines }}"
        when: ubtu18cis_6_2_18_user_username_check.stdout != ""
  when:
      - ubtu18cis_rule_6_2_18
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_6.2.18
      - user

- name: "SCORED | 6.2.19 | AUDIT | Ensure no duplicate group names exist"
  block:
      - name: "SCORED | 6.2.19 | AUDIT | Ensure no duplicate group names exist | Check for duplicate group names"
        shell: 'getent passwd | cut -d: -f1 | sort -n | uniq -d'
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_2_19_group_group_check

      - name: "SCORED | 6.2.19 | AUDIT | Ensure no duplicate group names exist | Print message that no duplicate groups exist"
        debug:
            msg: "Good News! There are no duplicate group names in the system"
        when: ubtu18cis_6_2_19_group_group_check.stdout == ""

      - name: "SCORED | 6.2.19 | AUDIT | Ensure no duplicate group names exist | Print warning about users with duplicate group names"
        debug:
            msg: "Warning: The following group names are duplicates: {{ ubtu18cis_6_2_19_group_group_check.stdout_lines }}"
        when: ubtu18cis_6_2_19_group_group_check.stdout != ""
  when:
      - ubtu18cis_rule_6_2_19
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_6.2.19
      - groups

- name: "SCORED | 6.2.20 | AUDIT | Ensure shadow group is empty"
  block:
      - name: "SCORED | 6.2.20 | AUDIT | Ensure shadow group is empty | Get Shadow GID"
        shell: grep ^shadow /etc/group | cut -f3 -d":"
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_2_20_shadow_gid

      - name: "SCORED | 6.2.20 | AUDIT | Ensure shadow group is empty | List of users with Shadow GID"
        shell: awk -F":" '($4 == "{{ ubtu18cis_6_2_20_shadow_gid.stdout }}") { print }' /etc/passwd | cut -f1 -d":"
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_2_20_users_shadow_gid

      - name: "SCORED | 6.2.20 | AUDIT | Ensure shadow group is empty | Message on no users"
        debug:
            msg: "Good News! There are no users with the Shado GID on your system"
        when: ubtu18cis_6_2_20_users_shadow_gid.stdout == ""

      - name: "SCORED | 6.2.20 | AUDIT | Ensure shadow group is empty | Message on users with Shadow GID"
        debug:
            msg:
                - "WARNING!!!! There are users that are in the Shadow group"
                - "To conform to CIS standards no users should be in this group"
                - "Please move the users below into another group"
                - "{{ ubtu18cis_6_2_20_users_shadow_gid.stdout_lines }}"
        when: ubtu18cis_6_2_20_users_shadow_gid.stdout != ""
  when:
      - ubtu18cis_rule_6_2_20
  tags:
      - level1-server
      - level1-workstation
      - scored
      - audit
      - rule_6.2.20
      - groups
      - user
